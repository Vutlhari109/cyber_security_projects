import requests
import argparse
import json

VT_API_KEY = "YOUR_VIRUSTOTAL_API_KEY"  # Replace this with your API key

HEADERS = {
    "x-apikey": VT_API_KEY
}

def check_hash(file_hash):
    url = f"https://www.virustotal.com/api/v3/files/{file_hash}"
    try:
        r = requests.get(url, headers=HEADERS)
        data = r.json()

        return {
            "type": data["data"]["type"],
            "malicious_votes": data["data"]["attributes"]["last_analysis_stats"]["malicious"],
            "suspicious_votes": data["data"]["attributes"]["last_analysis_stats"]["suspicious"],
            "harmless_votes": data["data"]["attributes"]["last_analysis_stats"]["harmless"],
            "sandbox_results": data["data"]["attributes"].get("sandbox_verdicts", {})
        }
    except Exception as e:
        return {"error": str(e)}

def check_url(scan_url):
    encoded_url = requests.utils.quote(scan_url, safe='')
    url = f"https://www.virustotal.com/api/v3/urls/{encoded_url}"

    try:
        r = requests.get(url, headers=HEADERS)
        data = r.json()

        return {
            "malicious_votes": data["data"]["attributes"]["last_analysis_stats"]["malicious"],
            "suspicious_votes": data["data"]["attributes"]["last_analysis_stats"]["suspicious"],
            "harmless_votes": data["data"]["attributes"]["last_analysis_stats"]["harmless"],
            "categories": data["data"]["attributes"].get("categories", {})
        }
    except Exception as e:
        return {"error": str(e)}

def main():
    parser = argparse.ArgumentParser(description="Malware Hash & URL Analyzer")
    parser.add_argument("--hash", help="MD5/SHA256/SHA1 hash to check")
    parser.add_argument("--url", help="URL to check reputation")
    parser.add_argument("--output", help="Save result to JSON", default=None)
    args = parser.parse_args()

    result = {}

    if args.hash:
        print(f"🔍 Checking file hash: {args.hash}...")
        result["file_hash_result"] = check_hash(args.hash)

    if args.url:
        print(f"🔍 Checking URL: {args.url}...")
        result["url_result"] = check_url(args.url)

    print("\n✅ Malware Report:")
    print(json.dumps(result, indent=2))

    if args.output:
        with open(args.output, 'w') as f:
            json.dump(result, f, indent=2)
        print(f"\n📁 Results saved to {args.output}")

if __name__ == "__main__":
    main()

